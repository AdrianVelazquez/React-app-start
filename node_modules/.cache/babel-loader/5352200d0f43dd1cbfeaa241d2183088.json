{"ast":null,"code":"var _jsxFileName = \"/Users/riotman/Web Development/riot/react apps/start/src/App.js\";\n\n/*\nSOURCES\n=======\n1. https://www.youtube.com/watch?v=DLX62G4lc44&list=PLQe7hfWfchppxMyZ1cVjZMDlBkI74SKBi&index=4&t=442s\n2. https://www.youtube.com/watch?v=00kXjx9k3Os\n3. https://github.com/facebook/create-react-app\n4. https://reactjs.org\n\nNOTES\n=====\n - Components: building block for making re-usable pieces of html\n    - always name your component functions using camel case\n    - always start the name with a capital letter\n      - example: function ThisIsMyApp(){};\n    - components can render other components\n - JSX: Reacts proprietary wrapper around vanilla javascript\n    - let you build Components using html syntax in javascript\n    - you can not render 2 jsx elements next to each other without wrapping them in a container so it counts as one html element with two elements wrapped inside\n        example: ReactDOM.render(\n          <div>\n            <h3>Hello World!</h3>\n            <p>This is a paragraph.</p>\n          </div>,\n          document.getElementById(\"root\")\n      );\n- Props: passes data around the app\n- State: how to maintain and change data in the app\n- Event Handling: interactivity with users\n- Life cycle methods: hook into timing events of components\n- HTTP: fetch data from an api\n\nRENDER\n======\n// reacts render method used to render components to the html div with an id of \"root\"\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n*/\nimport React from \"react\"; // import logo from \"./logo.svg\";\n\nimport \"./App.css\"; // a component function\n\nfunction App() {\n  // return the jsx you want this component to render\n  // you cant return two different elements next to each other withput wrapping them in a div\n  // components return single jsx elements\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"test\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"test\"));\n}\n\nexport default App; // return (\n// <div className=\"App\">\n//   <header className=\"App-header\">\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     <p>\n//       Edit <code>src/App.js</code> and save to reload.\n//     </p>\n//     <a\n//       className=\"App-link\"\n//       href=\"https://reactjs.org\"\n//       target=\"_blank\"\n//       rel=\"noopener noreferrer\"\n//     >\n//       Learn React\n//     </a>\n//   </header>\n// </div>\n// );","map":{"version":3,"sources":["/Users/riotman/Web Development/riot/react apps/start/src/App.js"],"names":["React","App"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP,C,CAEA;;AACA,SAASC,GAAT,GAAe;AACb;AACA;AACA;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF;AAQD;;AAED,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\nSOURCES\n=======\n1. https://www.youtube.com/watch?v=DLX62G4lc44&list=PLQe7hfWfchppxMyZ1cVjZMDlBkI74SKBi&index=4&t=442s\n2. https://www.youtube.com/watch?v=00kXjx9k3Os\n3. https://github.com/facebook/create-react-app\n4. https://reactjs.org\n\nNOTES\n=====\n - Components: building block for making re-usable pieces of html\n    - always name your component functions using camel case\n    - always start the name with a capital letter\n      - example: function ThisIsMyApp(){};\n    - components can render other components\n - JSX: Reacts proprietary wrapper around vanilla javascript\n    - let you build Components using html syntax in javascript\n    - you can not render 2 jsx elements next to each other without wrapping them in a container so it counts as one html element with two elements wrapped inside\n        example: ReactDOM.render(\n          <div>\n            <h3>Hello World!</h3>\n            <p>This is a paragraph.</p>\n          </div>,\n          document.getElementById(\"root\")\n      );\n- Props: passes data around the app\n- State: how to maintain and change data in the app\n- Event Handling: interactivity with users\n- Life cycle methods: hook into timing events of components\n- HTTP: fetch data from an api\n\nRENDER\n======\n// reacts render method used to render components to the html div with an id of \"root\"\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n*/\nimport React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\n// a component function\nfunction App() {\n  // return the jsx you want this component to render\n  // you cant return two different elements next to each other withput wrapping them in a div\n  // components return single jsx elements\n  return (\n    <ul>\n      <li>test</li>\n      <li>test</li>\n      <li>test</li>\n      <li>test</li>\n    </ul>\n  );\n}\n\nexport default App;\n\n// return (\n// <div className=\"App\">\n//   <header className=\"App-header\">\n//     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//     <p>\n//       Edit <code>src/App.js</code> and save to reload.\n//     </p>\n//     <a\n//       className=\"App-link\"\n//       href=\"https://reactjs.org\"\n//       target=\"_blank\"\n//       rel=\"noopener noreferrer\"\n//     >\n//       Learn React\n//     </a>\n//   </header>\n// </div>\n// );\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/riotman/Web Development/riot/react apps/start/src/App.js\";\n\n/*\nSOURCES\n=======\n1. https://www.youtube.com/watch?v=DLX62G4lc44&list=PLQe7hfWfchppxMyZ1cVjZMDlBkI74SKBi&index=4&t=442s\n2. https://www.youtube.com/watch?v=00kXjx9k3Os\n3. https://github.com/facebook/create-react-app\n4. https://reactjs.org\n\nNOTES\n=====\n - Components: building block for making re-usable pieces of html\n - JSX: Reacts proprietary wrapper around vanilla javascript\n    - let you build Components using html syntax in javascript\n    - you can not render 2 jsx elements next to each other without wrapping them in a container so it counts as one html element with two elements wrapped inside\n        example: ReactDOM.render(\n          <div>\n            <h3>Hello World!</h3>\n            <p>This is a paragraph.</p>\n          </div>,\n          document.getElementById(\"root\")\n      );\n- Props: passes data around the app\n- State: how to maintain and change data in the app\n- Event Handling: interactivity with users\n- Life cycle methods: hook into timing events of components\n- HTTP: fetch data from an api\n\nRENDER\n======\n// reacts render method used to render components to the html div with an id of \"root\"\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n*/\nimport React from \"react\"; // import logo from \"./logo.svg\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Edit \", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/riotman/Web Development/riot/react apps/start/src/App.js"],"names":["React","App","logo"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,EAKE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,CADF,CADF;AAkBD;;AAED,eAAeD,GAAf","sourcesContent":["/*\nSOURCES\n=======\n1. https://www.youtube.com/watch?v=DLX62G4lc44&list=PLQe7hfWfchppxMyZ1cVjZMDlBkI74SKBi&index=4&t=442s\n2. https://www.youtube.com/watch?v=00kXjx9k3Os\n3. https://github.com/facebook/create-react-app\n4. https://reactjs.org\n\nNOTES\n=====\n - Components: building block for making re-usable pieces of html\n - JSX: Reacts proprietary wrapper around vanilla javascript\n    - let you build Components using html syntax in javascript\n    - you can not render 2 jsx elements next to each other without wrapping them in a container so it counts as one html element with two elements wrapped inside\n        example: ReactDOM.render(\n          <div>\n            <h3>Hello World!</h3>\n            <p>This is a paragraph.</p>\n          </div>,\n          document.getElementById(\"root\")\n      );\n- Props: passes data around the app\n- State: how to maintain and change data in the app\n- Event Handling: interactivity with users\n- Life cycle methods: hook into timing events of components\n- HTTP: fetch data from an api\n\nRENDER\n======\n// reacts render method used to render components to the html div with an id of \"root\"\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n*/\nimport React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"map":"{\"version\":3,\"sources\":[\"/Users/riotman/Web Development/riot/react apps/start/src/components/Content.js\",\"/Users/riotman/Web Development/riot/react apps/start/src/components/Header.js\",\"/Users/riotman/Web Development/riot/react apps/start/src/components/Footer.js\",\"/Users/riotman/Web Development/riot/react apps/start/src/App.js\",\"/Users/riotman/Web Development/riot/react apps/start/src/serviceWorker.js\",\"/Users/riotman/Web Development/riot/react apps/start/src/index.js\"],\"names\":[\"timeOfDay\",\"Header\",\"react_default\",\"a\",\"createElement\",\"className\",\"style\",\"color\",\"fontWeight\",\"date\",\"Date\",\"hours\",\"getHours\",\"minutes\",\"getMinutes\",\"timeStyles\",\"contentStyles\",\"bodyStyles\",\"textAlign\",\"Content\",\"concat\",\"Footer\",\"App\",\"components_Header\",\"components_Content\",\"components_Footer\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"8KASIA,kCCGWC,QARA,WAAA,OACbC,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,SAASC,MAAO,CAAEC,MAAO,UAAWC,WAAY,SAAlE,aDDFC,EAAO,IAAIC,KACXC,EAAQF,EAAKG,WAAa,GAC1BC,EAAUJ,EAAKK,aAAe,GAK1BC,EAAa,CACjBP,WAAY,QAIRQ,EAAgB,CACpBT,MAAO,OACPC,WAAY,QAIRS,EAAa,CACjBC,UAAW,UAITP,EAAQ,IACVX,EAAY,KACZe,EAAWR,MAAQ,QAEnBP,EAAY,KACZe,EAAWR,MAAQ,QAKrB,IAUeY,EAVC,WAAA,OACdjB,EAAAC,EAAAC,cAAA,MAAA,CAAKE,MAAOW,GACVf,EAAAC,EAAAC,cAAA,OAAA,CAAME,MAAOU,GAAb,WACAd,EAAAC,EAAAC,cAAA,IAAA,KAAA,UAAA,GAAAgB,OAtCc,MAsCd,KAAAA,OArCS,WAsCTlB,EAAAC,EAAAC,cAAA,IAAA,CAAGE,MAAOS,GAAV,0BAAA,GAAAK,OAC6BT,EAAQ,KADrCS,OAC2CP,EAD3C,KAAAO,OACsDpB,MEtC3CqB,EAFA,WAAA,OAAMnB,EAAAC,EAAAC,cAAA,SAAA,KAAA,iBCqHNkB,IAAAA,EAxBf,WAKE,OACEpB,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,QC7FcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,EAAAA,EAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe,SDqH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\n\\n// variable assets\\nconst firstName = \\\"Bob\\\",\\n  lastName = \\\"Seiger\\\",\\n  date = new Date(),\\n  hours = date.getHours() % 12,\\n  minutes = date.getMinutes() % 60;\\n\\nlet timeOfDay;\\n\\n// styling object for time\\nconst timeStyles = {\\n  fontWeight: \\\"bold\\\"\\n};\\n\\n// styling object for content\\nconst contentStyles = {\\n  color: \\\"#333\\\",\\n  fontWeight: \\\"bold\\\"\\n};\\n\\n// styling object for body\\nconst bodyStyles = {\\n  textAlign: \\\"center\\\"\\n};\\n\\n// get time of day and change time color based on time\\nif (hours > 12) {\\n  timeOfDay = \\\"pm\\\";\\n  timeStyles.color = \\\"red\\\";\\n} else {\\n  timeOfDay = \\\"am\\\";\\n  timeStyles.color = \\\"blue\\\";\\n}\\n\\n// Content component\\n// using string templating from es6  and object styling\\nconst Content = () => (\\n  <div style={bodyStyles}>\\n    <main style={contentStyles}>Content</main>\\n    <p>Hello, {`${firstName} ${lastName}`}</p>\\n    <p style={timeStyles}>\\n      It is currently about, {`${hours + \\\":\\\"}${minutes} ${timeOfDay}`}\\n    </p>\\n  </div>\\n);\\n\\nexport default Content;\\n\",\"import React from \\\"react\\\";\\n\\n// Header component\\n// styled in the App.css file\\nconst Header = () => (\\n  <div>\\n    <header className=\\\"navbar\\\" style={{ color: \\\"#ff8c00\\\", fontWeight: \\\"bold\\\" }}>\\n      Header\\n    </header>\\n  </div>\\n);\\n\\nexport default Header;\\n\",\"import React from \\\"react\\\";\\n\\n// footer component\\nconst Footer = () => <footer>Footer</footer>;\\n\\nexport default Footer;\\n\",\"/*\\nSOURCES\\n=======\\n1. https://www.youtube.com/watch?v=DLX62G4lc44&list=PLQe7hfWfchppxMyZ1cVjZMDlBkI74SKBi&index=4&t=442s\\n2. https://www.youtube.com/watch?v=00kXjx9k3Os\\n3. https://github.com/facebook/create-react-app\\n4. https://reactjs.org\\n\\nNOTES\\n=====\\n - Components: building block for making re-usable pieces of html\\n    - always name your component functions using camel case\\n    - always start the name with a capital letter\\n      - example: function ThisIsMyApp(){};\\n    - components can render other components\\n      - a main component can render other html components like:\\n        - footers\\n        - headers\\n        - navigation\\n        - posts\\n    - components can be split into their own files\\n    - components can also be nested\\n      - a header component, being rendered by the main App cpmponent, can also render a nav component, or a logo component, or an img component...\\n    - each component should be in its own seperate file\\n    - name files the same name as the component name\\n\\n - JSX: Reacts proprietary wrapper around vanilla javascript\\n    - let you build Components using html syntax in javascript\\n    - you can not render 2 jsx elements next to each other without wrapping them in a container so it counts as one html element with two elements wrapped inside\\n        example: ReactDOM.render(\\n          <div>\\n            <h3>Hello World!</h3>\\n            <p>This is a paragraph.</p>\\n          </div>,\\n          document.getElementById(\\\"root\\\")\\n      );\\n    - you need to import react in any file you use jsx\\n\\n- Props: passes data around the app\\n- State: how to maintain and change data in the app\\n- Event Handling: interactivity with users\\n- Life cycle methods: hook into timing events of components\\n- HTTP: fetch data from an api\\n- File structure: you can create a components directory and stick all of your components in there\\n    - you will have to change the paths to dependent files like: the css files, and import component in the index.js file\\n\\nRENDER\\n======\\n// reacts render method used to render components to the html div with an id of \\\"root\\\"\\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\nSCRIPTING\\n=========\\n  - es6 allows you to use arrow functions in place of a function keyword\\n  - to insert vanilla javascript into jsx components, surround them in {curly braces}\\n  - you can still write vanilla javascript inside of component files, just not inside of the functional component itself without {curley braces}\\n  - to change from jsx, to javascript, you must use curly braces, this includes styling as well\\n\\nSTYLING\\n=======\\n  - jsx expects inline styiling to be an object, not a string\\n  - to use inline styling, you must wrap the object in curly braces as well\\n    - example: style={{color: #333}}\\n  - use a standard practice to either use the css file for styling, or, to create seperate variables for styling instead and referencing the styles variable inline\\n  - vendor prefixes and pseudo selectors are better off being implemented inside of a seperate style sheet because of their complex syntax by using css classes\\n  - by using styles in a seperate javascript variable, you can access css propoerties and append them to elements without actually creating the styles inside of the variable and using dot syntax\\n  - to style html elements in jsx, you cant use traditional nameing conventions like you would in a css files\\n  - use className to access the dom api when styling\\n  - to create a class for styling, use: className=\\\" \\\"\\n  - you cannot add class names to functional components, only the html jsx inside of them\\n\\nPROPS\\n=====\\n  - a prop is like the input type property, in how you can select from different types to give it different functionalities: radio, input, checkbox, etc..\\n  - pops modify the way a component acts\\n  - a single component can be used once, for re-usability of the code, and then change, depending on the properties it is given\\n  - you can pass props directly in the nested components in the parent component.\\n    - example: <ContactCard name=\\\"\\\" imgUrl=\\\"\\\" phone=\\\"\\\" email=\\\"\\\"/>\\n  - to use props, you must add the parameter in the component function\\n  - props is an object that has properties of the component\\n  - these props are passed into the called components as arguments\\n  - you can pass in a single property to the nested components being called, and fill in the data as an object {{}}\\n  - to do this, you must access the object from the props parameter to render the information.\\n    - example: props.contact.name, etc..\\n  - the child component recieves all of the props in an object from the props parameter that is given data in the parent component\\n  - properties are defined in the parent App component\\n  - properties are instantiated in the child components with a paremeter for the component function and using objects in the html\\n*/\\nimport React from \\\"react\\\";\\nimport Header from \\\"./components/Header\\\"; // import the footer component\\nimport Content from \\\"./components/Content\\\"; // import the footer component\\nimport Footer from \\\"./components/Footer\\\"; // import the footer component\\nimport \\\"./App.css\\\";\\n\\n// a component function (functional component)\\nfunction App() {\\n  // return the jsx you want this component to render\\n  // you cant return two different elements next to each other withput wrapping them in a div\\n  // components return single jsx elements\\n  // the parent component\\n  return (\\n    <div>\\n      <Header />\\n      <Content />\\n      <Footer />\\n    </div>\\n  );\\n}\\n\\n// an arrow functional component\\n// const App = () => (\\n//   <div>\\n//     <Header />\\n//     <Content />\\n//     <Footer />\\n//   </div>\\n// );\\n\\n// make the component available everywhere in the application\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\"; // import react dom for rendering to html\\nimport \\\"./index.css\\\";\\n\\n//COMPONENTS\\nimport App from \\\"./App\\\"; // import the App file which holds the component for rendering\\n//COMPONENTS\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\n//COMPONENTS\\n// reacts render method used to render components to the html div with an id of \\\"root\\\"\\n// render() takes 2 arguments - 1: what you want to render, 2: where you want to render it\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,t,n){e.exports=n(11)},,,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var o,a=n(0),r=n.n(a),l=n(2),c=n.n(l),i=(n(9),function(){return r.a.createElement(\"div\",null,r.a.createElement(\"header\",{className:\"navbar\",style:{color:\"#ff8c00\",fontWeight:\"bold\"}},\"Header\"))}),u=new Date,m=u.getHours()%12,s=u.getMinutes()%60,d={fontWeight:\"bold\"},f={color:\"#333\",fontWeight:\"bold\"},w={textAlign:\"center\"};m>12?(o=\"pm\",d.color=\"red\"):(o=\"am\",d.color=\"blue\");var E=function(){return r.a.createElement(\"div\",{style:w},r.a.createElement(\"main\",{style:f},\"Content\"),r.a.createElement(\"p\",null,\"Hello, \",\"\".concat(\"Bob\",\" \").concat(\"Seiger\")),r.a.createElement(\"p\",{style:d},\"It is currently about, \",\"\".concat(m+\":\").concat(s,\" \").concat(o)))},g=function(){return r.a.createElement(\"footer\",null,\"Footer\")};n(10);var h=function(){return r.a.createElement(\"div\",null,r.a.createElement(i,null),r.a.createElement(E,null),r.a.createElement(g,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(r.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[3,1,2]]]);","extractedComments":[]}